name: TF-Provisioning

on: [push]

jobs:
  terraform_apply:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
      
    - name: Get Branchname
      shell: bash
      run: echo "##[set-output name=branch_name;]$(echo ${GITHUB_REF#refs/heads/})"
      id: get_branchname
      
    - name: Format Branchname
      shell: bash
      run: echo "##[set-output name=branch_name_simple;]$(echo ${${{ steps.get_branchname.outputs.branch_name }}////-})"
      id: format_branchname
          
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.8

    - name: Verify Terraform version
      run: terraform --version

    - name: Terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform init -input=false
      working-directory: ./deployment

    - name: Terraform validation
      run: terraform validate
      working-directory: ./deployment

    - name: Terraform format
      run: terraform fmt -check
      working-directory: ./deployment
      
    - name: Terraform Workspace selection
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform workspace select ${{ steps.format_branchname.outputs.branch_name_simple }} || terraform workspace new terraform workspace select ${{ steps.format_branchname.outputs.branch_name_simple }}
      working-directory: ./deployment

    - name: Terraform apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform apply -auto-approve -input=false
      working-directory: ./deployment
